fileFormatVersion: 2
guid: daa5246585831481aabbf61fcc5114da
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst ZEPETO_World_1 = require(\"ZEPETO.World\");\r\nconst
    ZEPETO_Multiplay_1 = require(\"ZEPETO.Multiplay\");\r\nconst TypeSyncHelper_1
    = require(\"../SyncHelper/TypeSyncHelper\");\r\nconst TransformSyncHelper_1 =
    require(\"../SyncHelper/TransformSyncHelper\");\r\nconst DOTWeenSyncHelper_1
    = require(\"../SyncHelper/DOTWeenSyncHelper\");\r\nconst AnimatorSyncHelper_1
    = require(\"../SyncHelper/AnimatorSyncHelper\");\r\nconst EquipManager_1 = require(\"../../Scripts/Manager/EquipManager\");\r\nconst
    SyncIndexManager_1 = require(\"../SyncIndexManager\");\r\nconst GameManager_1
    = require(\"../../Scripts/GameManager\");\r\nconst LeaderBoardManager_1 = require(\"../../Scripts/Manager/LeaderBoardManager\");\r\nconst
    QuestManager_1 = require(\"../../Scripts/Manager/QuestManager\");\r\nconst HttpDataConnectionService_1
    = require(\"../../Scripts/HttpDataConnectionService\");\r\nconst DataManager_1
    = require(\"../../Scripts/Manager/DataManager\");\r\nconst TourManager_1 = require(\"../../Scripts/Game/Tour/TourManager\");\r\nclass
    MultiplayManager extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this._pingCheckCount = 0;\r\n       
    this._latency = 0;\r\n        this._diffServerTime = 0;\r\n        this._tfHelpers
    = [];\r\n        this._dtHelpers = [];\r\n        this._animHelper = [];\r\n       
    this.pingInterval = 1;\r\n        // When the application is paused (e.g. when
    the screen is closed or the home screen is opened)\r\n        this.bPaused =
    false;\r\n    }\r\n    get pingCheckCount() { return this._pingCheckCount; }\r\n   
    get latency() { return this._latency; }\r\n    static get instance() {\r\n       
    if (this.m_instance === null) {\r\n            this.m_instance = UnityEngine_1.GameObject.FindObjectOfType($typeof(MultiplayManager));\r\n           
    if (this.m_instance === null) {\r\n                this.m_instance = new UnityEngine_1.GameObject(MultiplayManager.name).AddComponent($typeof(MultiplayManager));\r\n           
    }\r\n        }\r\n        return MultiplayManager.m_instance;\r\n    }\r\n   
    Awake() {\r\n        MultiplayManager.m_instance = this;\r\n    }\r\n    Start()
    {\r\n        if (!this.multiplay)\r\n            this.multiplay = this.GetComponent($typeof(ZEPETO_World_1.ZepetoWorldMultiplay));\r\n       
    if (!this.multiplay)\r\n            console.warn(\"Add ZepetoWorldMultiplay First\");\r\n       
    this.multiplay.add_RoomJoined((room) => {\r\n            this.room = room;\r\n           
    this.StartCoroutine(this.SendPing());\r\n            this.CheckMaster();\r\n           
    this.GetInstantiate();\r\n            this.HttpConnection();\r\n            this.EquipConnection();\r\n           
    this.TourConnection();\r\n            this.TeleportConnection();\r\n           
    this.LeaderBoardConnection();\r\n        });\r\n        this._dtHelpers = UnityEngine_1.Object.FindObjectsOfType($typeof(DOTWeenSyncHelper_1.default));\r\n       
    this._animHelper = UnityEngine_1.Object.FindObjectsOfType($typeof(AnimatorSyncHelper_1.default));\r\n   
    }\r\n    /**Util**/\r\n    CheckMaster() {\r\n        this.StartCoroutine(this.WaitPingCheck());\r\n       
    this.room.AddMessageHandler(TypeSyncHelper_1.MESSAGE.MasterResponse, (masterSessionId)
    => {\r\n            this._masterSessionId = masterSessionId;\r\n            this._tfHelpers
    = UnityEngine_1.Object.FindObjectsOfType($typeof(TransformSyncHelper_1.default));\r\n           
    this._tfHelpers.forEach((tf) => {\r\n                if (tf.UpdateOwnerType ==
    TypeSyncHelper_1.UpdateOwner.Master) {\r\n                    tf.ChangeOwner(this._masterSessionId);\r\n               
    }\r\n            });\r\n            this._dtHelpers.forEach((dt) => {\r\n               
    dt.ChangeOwner(this._masterSessionId);\r\n            });\r\n            this._animHelper.forEach((anim)
    => {\r\n                anim.ChangeOwner(this._masterSessionId);\r\n           
    });\r\n        });\r\n    }\r\n    /*** Http Data Connection Service ***/\r\n   
    HttpConnection() {\r\n        this.room.AddMessageHandler(TypeSyncHelper_1.EVENT_MESSAGE.HTTP,
    (message) => {\r\n            if (message.type == TypeSyncHelper_1.EVENT_MESSAGE.GET)
    {\r\n                if (message.hasData) {\r\n                    console.log(`YES
    DATA`);\r\n                    this.SetPlayerData(message.body);\r\n               
    }\r\n                else {\r\n                    console.log(`NO DATA`);\r\n                   
    this.SendRequest_POST();\r\n                }\r\n            }\r\n        });\r\n   
    }\r\n    EquipConnection() {\r\n        // this.room.AddMessageHandler(EVENT_MESSAGE.Equip,
    (equipData: EquipData) => {\r\n        //     EquipManager.Instance.EquipItem(equipData);\r\n       
    // });\r\n        // this.room.AddMessageHandler(EVENT_MESSAGE.Unequip, (equipData:EquipData)
    => {                        \r\n        //     EquipManager.Instance.UnEquipItem(equipData);\r\n       
    // });\r\n    }\r\n    TourConnection() {\r\n        this.room.AddMessageHandler(TypeSyncHelper_1.EVENT_MESSAGE.TourState,
    (message) => {\r\n            if (message.IsTour) {\r\n                TourManager_1.default.Instance.TourStart(message.OwnerSessionId);\r\n           
    }\r\n            else {\r\n                TourManager_1.default.Instance.TourExit(message.OwnerSessionId);\r\n           
    }\r\n            SyncIndexManager_1.default.TourBalloonIsPlay = message.IsTour;\r\n       
    });\r\n    }\r\n    TeleportConnection() {\r\n        this.room.AddMessageHandler(TypeSyncHelper_1.EVENT_MESSAGE.Teleport,
    (message) => {\r\n            GameManager_1.default.Instance.TeleportSignalReceived(message.OwnerSessionId,
    message.ZoneType);\r\n        });\r\n    }\r\n    LeaderBoardConnection() {\r\n       
    this.room.AddMessageHandler(TypeSyncHelper_1.EVENT_MESSAGE.LeaderBoard_Update,
    (message) => {\r\n            LeaderBoardManager_1.default.Instance.Horror_UpdateRank();\r\n       
    });\r\n    }\r\n    // This function is used to instantiate a new object in the
    game. It sends a message to the server requesting the creation of the object,
    \r\n    // and waits for the server to respond with the necessary information
    to create it.\r\n    GetInstantiate() {\r\n        this.room.Send(TypeSyncHelper_1.MESSAGE.RequestInstantiateCache);\r\n       
    this.room.AddMessageHandler(TypeSyncHelper_1.MESSAGE.Instantiate, (message) =>
    {\r\n            const prefabObj = UnityEngine_1.Resources.Load(message.prefabName);\r\n           
    if (null === prefabObj) {\r\n                console.warn(`${message.prefabName}
    is null, Add Prefab in the Resources folder.`);\r\n                return;\r\n           
    }\r\n            const spawnPosition = message.spawnPosition ? new UnityEngine_1.Vector3(message.spawnPosition.x,
    message.spawnPosition.y, message.spawnPosition.z) : prefabObj.transform.position;\r\n           
    const spawnRotation = message.spawnRotation ? new UnityEngine_1.Quaternion(message.spawnRotation.x,
    message.spawnRotation.y, message.spawnRotation.z, message.spawnRotation.w) :
    prefabObj.transform.rotation;\r\n            const newObj = UnityEngine_1.Object.Instantiate(prefabObj,
    spawnPosition, spawnRotation);\r\n            // If the object has a TransformSyncHelper
    script attached to it, it sets the script''s ID and owner information. \r\n           
    // If the object does not have a TransformSyncHelper script, a warning is logged
    to the console.\r\n            const tf = newObj?.GetComponent($typeof(TransformSyncHelper_1.default));\r\n           
    if (null === tf) { //Creates an none-sync object.\r\n                console.warn(`${tf.name}
    does not have a TransformSyncHelper script.`);\r\n                return;\r\n           
    }\r\n            tf.Id = message.Id;\r\n            if (tf.UpdateOwnerType ===
    TypeSyncHelper_1.UpdateOwner.Master) {\r\n                tf.ChangeOwner(this._masterSessionId);\r\n           
    }\r\n            else if (message.ownerSessionId) {\r\n                tf.ChangeOwner(message.ownerSessionId);\r\n           
    }\r\n        });\r\n    }\r\n    /* Set Player Data */\r\n    SetPlayerData(playerData)
    {\r\n        const isLatest = playerData.version == TypeSyncHelper_1.EVENT_MESSAGE.Data_Version;\r\n       
    console.log(`[HttpDataConnectionService] SetPlayerData-Receive : ${isLatest ?
    \"Recent Data\" : \"old Data\"}`);\r\n        console.log(`[HttpDataConnectionService]
    PlayerData : \\n${JSON.stringify(playerData)}`);\r\n        const updatePlayerDB
    = HttpDataConnectionService_1.default.instance.UpdateData(playerData);\r\n       
    console.log(`[HttpDataConnectionService] SetPlayerData-Send : ${updatePlayerDB.version
    == TypeSyncHelper_1.EVENT_MESSAGE.Data_Version ? \"Recent Data\" : \"old Data\"}`);\r\n       
    console.log(`[HttpDataConnectionService] UpdatePlayerDB : \\n${JSON.stringify(updatePlayerDB)}`);\r\n       
    this.SendRequest_POST(updatePlayerDB);\r\n    }\r\n    /* POST */\r\n    SendRequest_POST(playerData)
    {\r\n        const playerDB = playerData ? playerData : HttpDataConnectionService_1.default.instance.InitData;\r\n       
    DataManager_1.default.Instance.PlayerDB = playerDB;\r\n        DataManager_1.default.Instance.IsGetPlayerDB
    = true;\r\n        // QuestManager.Instance.InitData(playerDB);\r\n        const
    data = new ZEPETO_Multiplay_1.RoomData();\r\n        const jsonData = JSON.stringify(playerDB);\r\n       
    data.Add(TypeSyncHelper_1.EVENT_MESSAGE.DATA, jsonData);\r\n        data.Add(TypeSyncHelper_1.EVENT_MESSAGE.METHOD,
    TypeSyncHelper_1.EVENT_MESSAGE.POST);\r\n        data.Add(TypeSyncHelper_1.EVENT_MESSAGE.URL,
    TypeSyncHelper_1.EVENT_MESSAGE.POST_URL);\r\n        this.room.Send(TypeSyncHelper_1.EVENT_MESSAGE.HTTP,
    data.GetObject());\r\n    }\r\n    /** Destroy synchronization objects */\r\n   
    Destroy(DestroyObject) {\r\n        const tf = DestroyObject.GetComponent($typeof(TransformSyncHelper_1.default));\r\n       
    const objId = tf?.Id;\r\n        if (null === objId) {\r\n            console.warn(\"Only
    objects that contain TransformSyncHelper scripts can be deleted.\");\r\n           
    return;\r\n        }\r\n        this.SendStatus(objId, TypeSyncHelper_1.GameObjectStatus.Destroyed);\r\n       
    UnityEngine_1.Object.Destroy(DestroyObject);\r\n    }\r\n    /** /Asset/Resources/
    Add the prefabs to create in the path. Add TransformSyncHelper.ts to the prefab
    to synchronize objects as well as creation.\r\n     @param prefabName The name
    or path of the prefab on the resource folder ( ex) Monsters/zombie)\r\n     @param
    ownerSessionId Inject owner into objects whose transform sync type is Undefine\r\n    
    */\r\n    Instantiate(prefabName, ownerSessionId, spawnPosition, spawnRotation)
    {\r\n        const newObjId = MultiplayManager.instance.GetServerTime().toString();\r\n       
    const data = new ZEPETO_Multiplay_1.RoomData();\r\n        data.Add(\"Id\", newObjId);\r\n       
    data.Add(\"prefabName\", prefabName);\r\n        data.Add(\"ownerSessionId\",
    ownerSessionId);\r\n        if (undefined != spawnPosition) {\r\n           
    const position = new ZEPETO_Multiplay_1.RoomData();\r\n            position.Add(\"x\",
    spawnPosition.x);\r\n            position.Add(\"y\", spawnPosition.y);\r\n           
    position.Add(\"z\", spawnPosition.z);\r\n            data.Add(\"spawnPosition\",
    position.GetObject());\r\n        }\r\n        if (undefined != spawnRotation)
    {\r\n            const rotation = new ZEPETO_Multiplay_1.RoomData();\r\n           
    rotation.Add(\"x\", spawnRotation.x);\r\n            rotation.Add(\"y\", spawnRotation.y);\r\n           
    rotation.Add(\"z\", spawnRotation.z);\r\n            rotation.Add(\"w\", spawnRotation.w);\r\n           
    data.Add(\"spawnRotation\", rotation.GetObject());\r\n        }\r\n        this.room.Send(TypeSyncHelper_1.MESSAGE.Instantiate,
    data.GetObject());\r\n    }\r\n    OnApplicationPause(pause) {\r\n        if
    (pause && !this.bPaused) {\r\n            this.PauseUser();\r\n        }\r\n       
    else if (!pause && this.bPaused) {\r\n            this.UnPauseUser();\r\n       
    }\r\n    }\r\n    PauseUser() {\r\n        this.room?.Send(TypeSyncHelper_1.MESSAGE.PauseUser);\r\n       
    this.bPaused = true;\r\n        this._pingCheckCount = 0;\r\n        this._tfHelpers
    = UnityEngine_1.Object.FindObjectsOfType($typeof(TransformSyncHelper_1.default));\r\n       
    // While paused, no information is received.\r\n        this._tfHelpers?.forEach((tf)
    => {\r\n            if (tf.UpdateOwnerType === TypeSyncHelper_1.UpdateOwner.Master)
    {\r\n                tf.ChangeOwner(null);\r\n            }\r\n            else
    if (tf.isOwner) {\r\n                this.SendStatus(tf.Id, TypeSyncHelper_1.GameObjectStatus.Pause);\r\n           
    }\r\n        });\r\n        this._dtHelpers?.forEach((dt) => {\r\n           
    dt.ChangeOwner(null);\r\n        });\r\n    }\r\n    UnPauseUser() {\r\n       
    this.room?.Send(TypeSyncHelper_1.MESSAGE.UnPauseUser);\r\n        this.bPaused
    = false;\r\n        this._tfHelpers = UnityEngine_1.Object.FindObjectsOfType($typeof(TransformSyncHelper_1.default));\r\n       
    this._tfHelpers?.forEach((tf) => {\r\n            if (tf.isOwner) {\r\n               
    this.SendStatus(tf.Id, TypeSyncHelper_1.GameObjectStatus.Enable);\r\n           
    }\r\n            else {\r\n                tf.ForceTarget();\r\n            }\r\n       
    });\r\n    }\r\n    // Ping every 1 second to check latency with the server *\r\n   
    *SendPing() {\r\n        let RequestTime = Number(+new Date());\r\n        let
    ResponseTime = Number(+new Date());\r\n        let isResponseDone = false;\r\n       
    this.room.AddMessageHandler(TypeSyncHelper_1.MESSAGE.CheckServerTimeResponse,
    (serverTime) => {\r\n            ResponseTime = Number(+new Date());\r\n           
    this._latency = (ResponseTime - RequestTime) * 0.5;\r\n            this._diffServerTime
    = Number(serverTime) - ResponseTime - this.latency;\r\n            this._pingCheckCount++;\r\n           
    isResponseDone = true;\r\n        });\r\n        while (true) {\r\n           
    if (!this.bPaused) {\r\n                this.room.Send(TypeSyncHelper_1.MESSAGE.CheckServerTimeRequest);\r\n               
    RequestTime = Number(+new Date());\r\n                yield new UnityEngine_1.WaitUntil(()
    => isResponseDone == true);\r\n            }\r\n            isResponseDone =
    false;\r\n            yield new UnityEngine_1.WaitForSeconds(this.pingInterval);\r\n       
    }\r\n    }\r\n    // After checking the connection with the server once, request
    the master information.\r\n    *WaitPingCheck() {\r\n        if (this.pingCheckCount
    == 0)\r\n            yield new UnityEngine_1.WaitUntil(() => this.pingCheckCount
    > 0);\r\n        this.room.Send(TypeSyncHelper_1.MESSAGE.CheckMaster);\r\n   
    }\r\n    //Returns the current server time.\r\n    GetServerTime() {\r\n       
    return this._diffServerTime + Number(+new Date());\r\n    }\r\n    SendStatus(id,
    status) {\r\n        const data = new ZEPETO_Multiplay_1.RoomData();\r\n       
    data.Add(\"Id\", id);\r\n        data.Add(\"Status\", status);\r\n        this.room.Send(TypeSyncHelper_1.MESSAGE.SyncTransformStatus,
    data.GetObject());\r\n    }\r\n}\r\nexports.default = MultiplayManager;\r\n/*
    Singleton */\r\nMultiplayManager.m_instance = null;\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/ZepetoScripts/Multiplay/MultiplayManager.ts","manifest":{"properties":[{"assembly":"ZEPETO.World","name":"multiplay","type":"ZEPETO.World.ZepetoWorldMultiplay","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"room","type":"ZEPETO.Multiplay.Room","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"_pingCheckCount","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Server
    connection status (View Only)\""]},{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"_latency","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]},{"assembly":"mscorlib","name":"_diffServerTime","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"SerializeField","args":[]}]}],"name":"MultiplayManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 32d60b9120a0fd7f4e15beb85b16c083
  onlyWriteTrigger: 0
